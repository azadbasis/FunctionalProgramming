<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="c5d27ebc-eb21-4103-9df5-0ec645a7c546" name="Changes" comment=" 1. Lambda expression use directly into the function&#10; 2. Use trailing lambda when lambda is a last parameter&#10; 3.Repeat (Higher order) function is a concise way to express for loop">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Kotlin File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="lambda" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;azadbasis&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/azadbasis/FunctionalProgramming&quot;,
    &quot;accountId&quot;: &quot;f54e30e4-78d2-4b60-b3a0-c2759573420a&quot;
  }
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 6
}</component>
  <component name="ProjectId" id="2jDsiKuteV2OovmrcCAvLgrni7O" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Kotlin.BasicFunctionsKt.executor": "Run",
    "Kotlin.LambdaDayOneKt.executor": "Run",
    "Kotlin.LambdaFunctionsKt.executor": "Run",
    "Kotlin.LambdaUses1Kt.executor": "Run",
    "Kotlin.LambdaUses2Kt.executor": "Run",
    "Kotlin.LambdaUses3Kt.executor": "Run",
    "Kotlin.LambdaUses4Kt.executor": "Run",
    "Kotlin.LambdaUses5Kt.executor": "Run",
    "Kotlin.MainKt.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "lambda",
    "kotlin-language-version-configured": "true",
    "onboarding.tips.debug.path": "D:/MobileApplication/Kotlin/FunctionalProgramming/FunctionalPrograming/src/Main.kt",
    "settings.editor.selected.configurable": "editor.preferences.fonts.default"
  }
}]]></component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="c5d27ebc-eb21-4103-9df5-0ec645a7c546" name="Changes" comment="" />
      <created>1720933107930</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1720933107930</updated>
    </task>
    <task id="LOCAL-00001" summary="We start learning functional program!">
      <option name="closed" value="true" />
      <created>1720933363446</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1720933363446</updated>
    </task>
    <task id="LOCAL-00002" summary="Merge main branch">
      <option name="closed" value="true" />
      <created>1720935464354</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1720935464354</updated>
    </task>
    <task id="LOCAL-00003" summary="Kotlin provides various ways to express functions, Here are some alternative steps to express functions in Kotlin">
      <option name="closed" value="true" />
      <created>1720944557795</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1720944557795</updated>
    </task>
    <task id="LOCAL-00004" summary="Kotlin provides various Lambda Expressions:functions">
      <option name="closed" value="true" />
      <created>1720969311953</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1720969311953</updated>
    </task>
    <task id="LOCAL-00005" summary="The goal is to demonstrate how to convert these functions into equivalent lambda expressions.">
      <option name="closed" value="true" />
      <created>1720982198912</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1720982198912</updated>
    </task>
    <task id="LOCAL-00006" summary="The goal is to demonstrate how to convert these functions into equivalent lambda expressions.">
      <option name="closed" value="true" />
      <created>1720982207091</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1720982207091</updated>
    </task>
    <task id="LOCAL-00007" summary="covering various ways to define the same lambda expressions.">
      <option name="closed" value="true" />
      <created>1721022640887</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1721022640887</updated>
    </task>
    <task id="LOCAL-00008" summary="callable reference operator &amp; lambda function use with higher order function.">
      <option name="closed" value="true" />
      <created>1721033194351</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1721033194351</updated>
    </task>
    <task id="LOCAL-00009" summary="callable reference operator &amp; lambda function use with higher order function.">
      <option name="closed" value="true" />
      <created>1721033199882</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1721033199882</updated>
    </task>
    <task id="LOCAL-00010" summary="lambda function call indirectly using higher order function.">
      <option name="closed" value="true" />
      <created>1721053196519</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1721053196519</updated>
    </task>
    <task id="LOCAL-00011" summary="lambda function call indirectly using higher order function.">
      <option name="closed" value="true" />
      <created>1721053202136</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1721053202136</updated>
    </task>
    <task id="LOCAL-00012" summary="Define function as a parameter using higher order function.">
      <option name="closed" value="true" />
      <created>1721057348100</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1721057348100</updated>
    </task>
    <task id="LOCAL-00013" summary="Higher order function make function nullable type.">
      <option name="closed" value="true" />
      <created>1721058498695</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1721058498695</updated>
    </task>
    <task id="LOCAL-00014" summary=" 1. Lambda expression use directly into the function&#10; 2. Use trailing lambda when lambda is a last parameter&#10; 3.Repeat (Higher order) function is a concise way to express for loop">
      <option name="closed" value="true" />
      <created>1721060006255</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1721060006255</updated>
    </task>
    <option name="localTasksCounter" value="15" />
    <servers />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="We start learning functional program!" />
    <MESSAGE value="Merge main branch" />
    <MESSAGE value="Kotlin provides various ways to express functions, Here are some alternative steps to express functions in Kotlin" />
    <MESSAGE value="Kotlin provides various Lambda Expressions:functions" />
    <MESSAGE value="The goal is to demonstrate how to convert these functions into equivalent lambda expressions." />
    <MESSAGE value="covering various ways to define the same lambda expressions." />
    <MESSAGE value="callable reference operator &amp; lambda function use with higher order function." />
    <MESSAGE value="lambda function call indirectly using higher order function." />
    <MESSAGE value="Define function as a parameter using higher order function." />
    <MESSAGE value="Higher order function make function nullable type." />
    <MESSAGE value=" 1. Lambda expression use directly into the function&#10; 2. Use trailing lambda when lambda is a last parameter&#10; 3.Repeat (Higher order) function is a concise way to express for loop" />
    <option name="LAST_COMMIT_MESSAGE" value=" 1. Lambda expression use directly into the function&#10; 2. Use trailing lambda when lambda is a last parameter&#10; 3.Repeat (Higher order) function is a concise way to express for loop" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="kotlin-line">
          <url>file://$PROJECT_DIR$/src/Main.kt</url>
          <line>9</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>